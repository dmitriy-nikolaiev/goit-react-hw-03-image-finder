{"version":3,"sources":["services/apiService.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["fetchImages","searchQuery","page","a","fetch","rawResult","ok","json","result","Searchbar","state","value","changeHandler","e","setState","target","submitHandler","preventDefault","props","onSubmit","trim","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","webformatURL","alt","onClick","showImageHandle","ImageGallery","images","map","image","index","showImageHandler","largeImageURL","id","Button","loadMoreHandler","Loader","color","height","width","modalRoot","document","querySelector","Modal","keyDownHandler","code","onClose","overlayClickHandler","event","currentTarget","window","addEventListener","removeEventListener","createPortal","fullImageURL","App","isLoading","openModal","error","maxPages","newElementHight","closeModal","imageUrl","scrollToHandler","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","searchImagesHandler","total","Math","ceil","totalHits","hits","console","toString","min","onSubmitHandler","searchString","prevProps","prevState","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed8bf875.chunk.js","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '12163095-f5466ddad4a17af4f9341497c';\r\n\r\nconst fetchImages = async (searchQuery, page) => {\r\n  const rawResult = await fetch(\r\n    `${BASE_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n\r\n  if (!rawResult.ok) {\r\n    throw rawResult;\r\n  }\r\n\r\n  const result = await rawResult.json();\r\n\r\n  return result;\r\n};\r\n\r\n// import axios from 'axios';\r\n\r\n// const fetchArticlesWithQuery = searchQuery => {\r\n//   return axios\r\n//     .get(`https://hn.algolia.com/api/v1/search?query=${searchQuery}`)\r\n//     .then(response => response.data.hits);\r\n// };\r\n\r\n// export default {\r\n//   fetchArticlesWithQuery,\r\n// };\r\n\r\nexport default fetchImages;\r\n","import { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.value.trim());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.submitHandler}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.changeHandler}\r\n            value={this.state.value}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import { Component } from 'react';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  // componentDidMount(prevProps, prevState) {\r\n  //   console.log(prevProps);\r\n  //   console.log(prevState);\r\n  //   console.log(this.props.index);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          src={this.props.webformatURL}\r\n          alt=\"\"\r\n          className=\"ImageGalleryItem-image\"\r\n          onClick={this.props.showImageHandle}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import { Component } from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nclass ImageGallery extends Component {\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   console.log('list Update');\r\n  //   window.scrollTo({\r\n  //     top: document.documentElement.scrollHeight,\r\n  //     behavior: 'smooth',\r\n  //   });\r\n  // }\r\n  render() {\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        {this.props.images.map((image, index) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              key={image.id}\r\n              webformatURL={image.webformatURL}\r\n              showImageHandle={this.props.showImageHandler(image.largeImageURL)}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <button type=\"button\" className=\"Button\" onClick={this.props.loadMoreHandler}>\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default Button;\r\n","import Spinner from 'react-loader-spinner';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Spinner type=\"Bars\" color=\"#3f51b5\" height={60} width={120} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.keyDownHandler);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.keyDownHandler);\r\n  }\r\n\r\n  keyDownHandler = (e) => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  overlayClickHandler = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.overlayClickHandler}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.fullImageURL} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import { Component } from 'react';\nimport './styles.css';\n\nimport fetchImages from './services/apiService';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal/';\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    page: 1,\n    isLoading: false,\n    openModal: false,\n    error: '',\n  };\n\n  maxPages = 0;\n  fullImageURL = '';\n  newElementHight = 0;\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.searchQuery !== this.state.searchQuery && this.state.searchQuery !== '') ||\n      prevState.page !== this.state.page\n    ) {\n      this.searchImagesHandler();\n      // this.scrollToHandler();\n    }\n    if (prevState.images.length !== this.state.images.length && prevState.images.length !== 0) {\n      // console.log('scrollToHandler App DidUpdate');\n      this.scrollToHandler();\n    }\n  }\n\n  closeModal = () => {\n    this.fullImageURL = '';\n    this.setState({ openModal: false });\n  };\n\n  showImageHandler = (imageUrl) => () => {\n    this.fullImageURL = imageUrl;\n    this.setState({ openModal: true });\n  };\n\n  scrollToHandler = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 750);\n  };\n\n  searchImagesHandler = async () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ isLoading: true, error: '' });\n    try {\n      const result = await fetchImages(searchQuery, page);\n\n      if (result.total !== 0) {\n        this.maxPages = Math.ceil(result.totalHits / 12);\n\n        this.setState(({ images }) => ({\n          images: [...images, ...result.hits],\n        }));\n      } else {\n        // console.log('Not found');\n        this.setState(() => ({\n          images: [],\n          error: 'No results were found for your search.',\n        }));\n      }\n    } catch (error) {\n      console.error(error);\n      this.setState(() => ({ error: error.toString() }));\n    } finally {\n      this.setState({ isLoading: false });\n\n      // this.scrollToHandler();\n    }\n  };\n\n  loadMoreHandler = () => {\n    this.setState(() => ({ page: Math.min(this.maxPages, this.state.page + 1) }));\n  };\n\n  onSubmitHandler = (searchString) => {\n    this.maxPages = 0;\n\n    this.setState(() => ({\n      images: [],\n      searchQuery: searchString,\n      page: 1,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onSubmitHandler} />\n        {this.state.error ? (\n          <p className=\"ErrorText\">{this.state.error}</p>\n        ) : (\n          <ImageGallery\n            images={this.state.images}\n            showImageHandler={this.showImageHandler}\n            scrollToHandler={this.scrollToHandler}\n          />\n        )}\n        {/* <ImageGallery\n          images={this.state.images}\n          showImageHandler={this.showImageHandler}\n          scrollToHandler={this.scrollToHandler}\n        /> */}\n        {this.state.isLoading && <Loader />}\n        {this.state.page < this.maxPages && <Button loadMoreHandler={this.loadMoreHandler} />}\n        {this.state.openModal && (\n          <Modal fullImageURL={this.fullImageURL} onClose={this.closeModal}></Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}